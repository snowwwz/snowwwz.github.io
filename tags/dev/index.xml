<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dev on Wouldn&#39;t It Be Nice</title>
    <link>https://yukinooz.github.io/tags/dev/</link>
    <description>Recent content in dev on Wouldn&#39;t It Be Nice</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright since 2020 Reona Shimada All Rights Reserved.</copyright>
    <lastBuildDate>Mon, 18 Oct 2021 22:15:47 +0900</lastBuildDate><atom:link href="https://yukinooz.github.io/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>golang append()のメモリ割り当て</title>
      <link>https://yukinooz.github.io/posts/2021/20211018_go_memory/</link>
      <pubDate>Mon, 18 Oct 2021 22:15:47 +0900</pubDate>
      
      <guid>https://yukinooz.github.io/posts/2021/20211018_go_memory/</guid>
      <description>makeのcapacityは確保するメモリの効率化のためスライスのMAXの長さを指す。 capacityを超えた場合、要素数 × 2 の容量が確保さ</description>
    </item>
    
    <item>
      <title>golang interfaceとは</title>
      <link>https://yukinooz.github.io/posts/2021/20211017_go_interface/</link>
      <pubDate>Sun, 17 Oct 2021 11:25:47 +0900</pubDate>
      
      <guid>https://yukinooz.github.io/posts/2021/20211017_go_interface/</guid>
      <description>Interface 中身のない型 何でも入る型 func main() { var i interface{} i = 4 fmt.Println(i) //4 i = 3.5 fmt.Println(i) //3.5 i = &amp;#34;文字列&amp;#34; fmt.Println(i) //文字列 } 型変換 // (interfaceの変数).</description>
    </item>
    
    <item>
      <title>golang deferの挙動</title>
      <link>https://yukinooz.github.io/posts/2021/20211015_go_defer/</link>
      <pubDate>Fri, 15 Oct 2021 11:25:47 +0900</pubDate>
      
      <guid>https://yukinooz.github.io/posts/2021/20211015_go_defer/</guid>
      <description>defer A defer statement defers the execution of a function until the surrounding function returns. The deferred call&amp;rsquo;s arguments are evaluated immediately, but the function call is not executed until the surrounding function returns. A tour of go: defer 関数が終了する際に実行すべき処理を記述できる 遅延実行される関数</description>
    </item>
    
    <item>
      <title>Jenkins導入とNginxでリバースプロキシ設定</title>
      <link>https://yukinooz.github.io/posts/2019/20191108_jenkins_nginx/</link>
      <pubDate>Fri, 08 Nov 2019 10:20:00 +0900</pubDate>
      
      <guid>https://yukinooz.github.io/posts/2019/20191108_jenkins_nginx/</guid>
      <description>業務でCIツールとしてJenkinsを入れることになったので、その時の記録。 jenkinsの説明は、Jenkinsとはなんぞや？​が簡潔でわ</description>
    </item>
    
    <item>
      <title>メモリの仕組みの理解はプログラマの嗜み</title>
      <link>https://yukinooz.github.io/posts/2019/20191028_oop_memory/</link>
      <pubDate>Mon, 28 Oct 2019 10:20:00 +0900</pubDate>
      
      <guid>https://yukinooz.github.io/posts/2019/20191028_oop_memory/</guid>
      <description>オブジェクト指向でなぜ作るのか 「オブジェクト指向でなぜ作るのか」の第５章「メモリの仕組みの理解はプログラマのたしなみ」を読んだので、メモ。 一</description>
    </item>
    
  </channel>
</rss>
